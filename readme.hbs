[view on npm](https://www.npmjs.com/package/@ads-medienmanufaktur/easy-sprite)
# Easy Sprite by ADS Medienmanufaktur
#### Merge your SVG files or raw SVG code into one concise and minimal sprite sheet and build your own SVG library :)

---
## Overview
This package allows you to edit a sprite sheet without even opening it... All right from within your code!
You only have to provide a sprite sheet to use. If the sprite does not exist it will be created.

## Usage
### As a global CLI
```js
npm i -g @ads-medienmanufaktur/easy-sprite
```
From anywhere you can now use one of 2 commands:
```js
svg-sprite <command> or sprite <command>
```
The commands of the CLI respond to the exported functions of the API:
* --add,-a: Add SVG(s) to a sprite sheet (or initialize a new sprite sheet)
* --get,-g: Get all IDs in current sprite sheet
* --remove,-rm: Remove an ID from the sprite sheet
You will be prompted to provide the parameters for the API functions in a step-by-step process.
All functions are chainable like:
```js
sprite --add --get
```
Chained commands are executed after all parameters of each command have been provided.

### As an API
To use this package in a project install and require it. Then you can call each function as you would using any other module. For more details, see the API Reference below.
If you intend toi use the Easy Sprite API inside a VueJS project: don't. VueJS cannot handle importing NPM modules without them being a Vue plugin. Any insight or solutions to this are greatly appreciated.
However, as a workaround: Use the modules API in a NodeJS Server and simply link the generated sprite sheet in he vueJS template as shown below.

## Using the generated sprite sheet
In any HTML document create an SVG tag and inside it a USE tag. Using xlink:href attribute on the USE tag link to the external sprite sheet and require a specific icon using the ID (#) selector. Example:
```html
<svg class="icon" width="25" height="25">
    <use xlink:href="sprite#iconId"></use>
</svg>
```
## Notes on generated sprite sheet
All SVG code (including the code extracted from SVG files) will be optimized using [SVGO](https://github.com/svg/svgo).
By default all Fills are remove  to allow styling the icon with CSS. This results in unicolor icons (if the individual paths are not styled separately from the main SVG element.)

# API Reference
{{#module name="easy-sprite"}}
    {{>body~}}
    {{>member-index~}}
    {{>separator~}}
    {{>members~}}
{{/module}}

* * *

&copy; 2020 ADS Medienmanufaktur &lt;info@ads-medienmanufaktur.de&gt;.

Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).

Easy Sprite is licensed under the [MIT license](https://github.com/acvm007/Easy-Sprite/blob/master/LICENSE.md).
